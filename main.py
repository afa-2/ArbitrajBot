import telebot
import configparser
import time
import logging
from stock_exchanges.working_with_data import get_orders_from_exchanges


def _send_message(bot, chats_list, message):
    for chat in chats_list:
        if len(chat) > 0:
            bot.send_message(chat, message, parse_mode="HTML", disable_web_page_preview=True)


def main_script(first_message):
    try:
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ --------------------------------------------------------------------------------------------------------
        # –∑–∞–±–∏—Ä–∞–µ–º –∫–ª—é—á–∏ –∏–∑ ini
        dict_with_keys = {}
        config = configparser.ConfigParser()
        config.read('config.ini')

        # telegram
        api = config.get('keys', 'api_key').strip()

        # bybit
        bybit_api_key = config.get('keys', 'bybit_api_key').strip()
        bybit_secret_key = config.get('keys', 'bybit_secret_key').strip()
        dict_with_keys['bybit'] = {'api_key': bybit_api_key, 'secret_key': bybit_secret_key}

        #  –∑–∞–±–∏—Ä–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ ini
        # —á–∞—Ç—ã
        chats = config.get('settings', 'chats').strip()
        chats_list = chats.strip('][').split(', ')

        min_profit_from_conf = float(config.get('settings', 'min_profit').strip())
        max_profit_from_conf = float(config.get('settings', 'max_profit').strip())
        min_profit_usd_from_conf = float(config.get('settings', 'min_profit_usd').strip())
        min_invest_conf = float(config.get('settings', 'min_invest').strip())
        max_invest_conf = float(config.get('settings', 'max_invest').strip())

        # –≤–∞–ª—é—Ç—ã
        currencies = config.get('settings', 'currencies').strip()
        currencies = currencies.replace(" ", "")
        currencies = currencies.replace("\n", "")
        currencies = currencies.strip('][').split(',')
        # —É–¥–∞–ª—è–µ–º –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –≤–∞–ª—é—Ç—ã
        new_list = []
        for currency in currencies:
            if currency not in new_list:
                new_list.append(currency)

        currencies = new_list

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ------------------------------------------------------------------------------------------------------
        logging.basicConfig(
            level=logging.INFO,  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            format='%(asctime)s [%(levelname)s] %(message)s',  # –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
            handlers=[
                logging.FileHandler("my_log.log"),  # –ó–∞–ø–∏—Å—å –ª–æ–≥–æ–≤ –≤ —Ñ–∞–π–ª
            ]
        )

        # –ü—Ä–æ–≥—Ä–∞–º–º–∞ --------------------------------------------------------------------------------------------------------
        bot = telebot.TeleBot(api)  # –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞

        # —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω
        _send_message(bot, chats_list, f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, {first_message}")
        text = f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n" \
               f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç: {len(currencies)}\n" \
               f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {min_profit_from_conf}%\n" \
               f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥: {max_profit_from_conf}%\n" \
               f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏—Ç {min_profit_usd_from_conf}$\n" \
               f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ —Å–¥–µ–ª–∫—É: {min_invest_conf}$\n" \
               f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞—Ç—Ä–∞—Ç –Ω–∞ —Å–¥–µ–ª–∫—É: {max_invest_conf}$\n" \

        _send_message(bot, chats_list, text)

        while True:
            try:
                start_time = time.time()  # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
                for currency in currencies:  # –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç—ã
                    all_orders = get_orders_from_exchanges(currency)  # –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ä–¥–µ—Ä–∞
                    if len(all_orders) > 0:  # –µ—Å–ª–∏ –æ—Ä–¥–µ—Ä–æ–≤ –±–æ–ª—å—à–µ 0
                        previous_message = ''
                        for order in all_orders:  # –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ –æ—Ä–¥–µ—Ä–∞
                            order_buy = order['order_buy'] # –æ—Ä–¥–µ—Ä –Ω–∞ –ø–æ–∫—É–ø–∫—É
                            orders_sell = order['orders_sell']  # –æ—Ä–¥–µ—Ä–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É
                            need_spent = order['need_spent']  # –Ω–∞–¥–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å
                            need_bought = order['need_bought'] # –Ω–∞–¥–æ –∫—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç
                            profit = order['margin'] # –ø—Ä–æ—Ñ–∏—Ç –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
                            profit_in_dol = order['margin_in_dol']  # –ø—Ä–æ—Ñ–∏—Ç –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö

                            # –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏—Ç –±–æ–ª—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –Ω–∞–¥–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
                            if max_profit_from_conf >= profit >= min_profit_from_conf \
                                    and max_invest_conf >= need_spent >= min_invest_conf \
                                    and profit_in_dol >= min_profit_usd_from_conf:

                                # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø—Å–æ–∫ –∏–∑ –≤—Å–µ—Ö –æ—Ä–¥–µ—Ä–æ–≤ –Ω–∞ –ø—Ä–æ–∞–¥–∂—É
                                text_orders_sell = ''
                                for order_sell in orders_sell:  # –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ –æ—Ä–¥–µ—Ä–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É
                                    string = f'–¶–µ–Ω–∞: {order_sell[2]}, –∫–æ–ª-–≤–æ: {order_sell[3]}\n'
                                    text_orders_sell += string

                                # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                                message = f"–ü–∞—Ä–∞: <b>{currency}/USDT</b>\n\n" \
                                          f"" \
                                          f"‚úÖ–ü–æ–∫—É–ø–∫–∞: <b><a href='{orders_sell[0][1]}'>{orders_sell[0][0]}</a></b>\n\n" \
                                          f"" \
                                          f"–í—ã–∫—É–ø–∏—Ç—å –æ–±—ä–µ–º: <b>{round(need_bought, 4)} {currency}</b>\n" \
                                          f"{text_orders_sell}" \
                                          f"–ü–æ—Ç—Ä–∞—Ç–∏–≤ <b>{round(need_spent, 2)} USDT</b>\n\n" \
                                          f"" \
                                          f"üîª–ü—Ä–æ–¥–∞–∂–∞: <b><a href='{order_buy[1]}'>{order_buy[0]}</a></b>\n" \
                                          f"–ü—Ä–æ–¥–∞—Ç—å: {order_buy[4]} {currency}\n" \
                                          f"–ü–æ —Ü–µ–Ω–µ: {order_buy[3]} USDT\n\n" \
                                          f"" \
                                          f"üìä –°–ø—Ä–µ–¥: {profit}%\n" \
                                          f"üí≤ –ü—Ä–æ—Ñ–∏—Ç: {profit_in_dol}$"

                                if message != previous_message:  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞–≤–Ω–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É
                                    _send_message(bot, chats_list, message)
                                previous_message = message  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–µ–¥—É–¥—â–µ–µ, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –±—ã –æ–Ω–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å

                end_time = time.time()  # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞
                elapsed_time = end_time - start_time  # –í—ã—á–∏—Å–ª—è–µ–º –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
                elapsed_time = round(elapsed_time, 2)

                text = f"–ü–æ–ª–Ω—ã–π –∫—Ä—É–≥. –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞: {elapsed_time} —Å–µ–∫—É–Ω–¥"
                logging.info(text)

            except Exception as e:
                logging.error(e)
                _send_message(bot, chats_list, "–£–ø—Å. –ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–æ—á–∫–∞ –Ω–∞ —Å–∞–º–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ")

    except Exception as e:
        text_for_log = f"-------------------------------------------------------------" \
                       f"–ë–æ—Ç —É–ø–∞–ª" \
                       f"–û—à–∏–±–∫–∞: {e}" \
                       f"-------------------------------------------------------------"
        logging.error(text_for_log)
        time.sleep(30)
        main_script(f'–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏: {str(e)}')


main_script('–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫')

#bot.infinity_polling()


